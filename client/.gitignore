# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?



import { Link, useLocation } from "react-router-dom";
import { useState, useEffect } from "react";

export default function Sidebar() {
  const location = useLocation();
  const [isCollapsed, setIsCollapsed] = useState(false);

  // Collapse sidebar automatically on small screens
  useEffect(() => {
    const handleResize = () => {
      setIsCollapsed(window.innerWidth < 768); // collapse below md
    };
    handleResize();
    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  const menuSections = [
    {
      title: "Main",
      items: [
        { name: "Home", icon: "üè†", path: "/" },
        { name: "Trending", icon: "üî•", path: "/trending" },
        { name: "Subscriptions", icon: "üì∫", path: "/subscriptions" },
      ],
    },
    {
      title: "Library",
      items: [
        { name: "Library", icon: "üìö", path: "/library" },
        { name: "History", icon: "üïí", path: "/history" },
        { name: "Watch Later", icon: "‚è∞", path: "/watch-later" },
        { name: "Liked Videos", icon: "‚ù§Ô∏è", path: "/liked" },
      ],
    },
    {
      title: "More from YouTube",
      items: [
        { name: "YouTube Premium", icon: "üíé", path: "/premium" },
        { name: "YouTube Music", icon: "üéµ", path: "/music" },
      ],
    },
    {
      title: "Settings & Help",
      items: [
        { name: "Settings", icon: "‚öôÔ∏è", path: "/settings" },
      ],
    },
  ];

  return (
    <aside
      className={`bg-gray-900 h-screen text-white p-4 sticky top-0 overflow-y-auto border-r border-gray-800 transition-all duration-300 ${
        isCollapsed ? "w-20" : "w-64"
      }`}
    >
      {/* Brand / Logo */}
      <h2
        className={`text-xl font-bold mb-6 flex items-center gap-2 text-red-500 transition-opacity duration-300 ${
          isCollapsed ? "opacity-0 pointer-events-none" : "opacity-100"
        }`}
      >
        üé¨ MyTube
      </h2>

      {/* Menu Sections */}
      {menuSections.map((section, i) => (
        <div key={i} className="mb-6">
          {!isCollapsed && section.title && (
            <h3 className="text-sm text-gray-400 mb-2 uppercase tracking-wide">{section.title}</h3>
          )}
          <nav className="flex flex-col gap-2">
            {section.items.map((item) => (
              <Link
                key={item.name}
                to={item.path}
                className={`flex items-center gap-3 p-2 rounded-lg transition-colors duration-200 ${
                  location.pathname === item.path ? "bg-red-600" : "hover:bg-gray-700"
                }`}
              >
                <span className="text-lg">{item.icon}</span>
                {!isCollapsed && <span>{item.name}</span>}
              </Link>
            ))}
          </nav>
        </div>
      ))}

      {/* Footer */}
      {!isCollapsed && (
        <p className="text-xs text-gray-500 mt-6 border-t border-gray-700 pt-4">
          ¬© 2025 MyTube Clone
        </p>
      )}
    </aside>
  );
}


import { FaYoutube, FaSearch, FaBell, FaMicrophone } from "react-icons/fa";
import { MdVideoCall } from "react-icons/md";
import { Link, useNavigate } from "react-router-dom";
import { useAuth } from "../context/AuthContext";
import { useState } from "react";

export default function Topbar() {
  const { user, logout } = useAuth();
  const navigate = useNavigate();
  const [showMenu, setShowMenu] = useState(false);

  return (
    <header className="sticky top-0 z-10 bg-background flex items-center justify-between px-6 py-3 border-b border-gray-800">
      {/* Left section: logo */}
      <div className="flex items-center gap-2 cursor-pointer" onClick={() => navigate("/")}>
        <FaYoutube className="text-accent text-2xl" />
        <span className="text-xl font-semibold text-white">YouTube</span>
      </div>

      {/* Center section: search */}
      <div className="flex items-center w-[40%] max-w-xl">
        <input
          type="text"
          placeholder="Search"
          className="flex-1 bg-sidebar border border-gray-700 text-white text-sm rounded-l-full px-4 py-2 outline-none focus:border-accent"
        />
        <button className="bg-card px-4 py-2 rounded-r-full border border-gray-700 hover:bg-gray-700 transition">
          <FaSearch className="text-white" />
        </button>
        <button className="ml-3 bg-card p-2 rounded-full hover:bg-gray-700 transition">
          <FaMicrophone />
        </button>
      </div>

      {/* Right section */}
      <div className="relative flex items-center gap-5 text-white">
        <MdVideoCall
          className="text-xl cursor-pointer hover:text-accent transition"
          onClick={() => navigate("/upload")}
        />
        <FaBell className="text-xl cursor-pointer hover:text-accent transition" />

        {/* If user logged in */}
        {user ? (
          <div className="relative">
            <img
              src={user.avatar?.url || user.avatar || "/default-avatar.png"}
              alt="User avatar"
              className="w-12 h-12 rounded-full object-cover cursor-pointer border border-gray-600"
              onClick={() => setShowMenu(!showMenu)}
            />
            {showMenu && (
              <div className="absolute right-0 mt-2 w-48 bg-gray-900 rounded-lg shadow-lg border border-gray-700 py-2">
                <p className="px-4 py-2 text-sm text-gray-300 border-b border-gray-700">
                  Signed in as <br />
                  <span className="font-semibold text-white">{user.username}</span>
                </p>
                <Link
                  to="/channel/me"
                  className="block px-4 py-2 text-sm hover:bg-gray-800"
                  onClick={() => setShowMenu(false)}
                >
                  My Channel
                </Link>
                <Link
                  to="/upload"
                  className="block px-4 py-2 text-sm hover:bg-gray-800"
                  onClick={() => setShowMenu(false)}
                >
                  Upload Video
                </Link>
                <button
                  onClick={() => {
                    logout();
                    setShowMenu(false);
                    navigate("/login");
                  }}
                  className="block w-full text-left px-4 py-2 text-sm hover:bg-gray-800"
                >
                  Logout
                </button>
              </div>
            )}
          </div>
        ) : (
          // If not logged in ‚Üí show Login button
          <div className="flex gap-3">
            <Link
              to="/login"
              className="bg-red-600 px-4 py-2 rounded hover:bg-red-700 transition"
            >
              Login
            </Link>
            <Link
              to="/register"
              className="border border-red-600 text-red-400 px-4 py-2 rounded hover:bg-red-600 hover:text-white transition"
            >
              Sign Up
            </Link>
          </div>
        )}
      </div>
    </header>
  );
}

// src/components/CommentSection.jsx
export default function CommentSection() {
  const comments = [
    {
      user: "Charlotte White",
      date: "1 month ago",
      text: "A very slow, gentle, beautiful shamanic tantra love music. Perfect for meditation or deep relaxation.",
      likes: 9,
      replies: 1,
    },
    {
      user: "John Doe",
      date: "2 weeks ago",
      text: "This helped me focus while studying. Thanks for uploading!",
      likes: 3,
      replies: 0,
    },
  ];

  return (
    <div className="mt-8">
      <h3 className="text-lg font-semibold mb-4">Comments</h3>

      {/* Add new comment box */}
      <div className="flex items-start gap-3 mb-6">
        <div className="w-10 h-10 rounded-full bg-gray-600" />
        <input
          type="text"
          placeholder="Add a comment..."
          className="flex-1 bg-transparent border-b border-gray-700 text-sm outline-none focus:border-accent p-1"
        />
      </div>

      {/* Existing comments */}
      {comments.map((comment, index) => (
        <div key={index} className="flex items-start gap-3 mb-6">
          <div className="w-10 h-10 rounded-full bg-gray-600" />
          <div className="flex-1">
            <div className="flex items-center gap-2 text-sm">
              <span className="font-medium text-white">{comment.user}</span>
              <span className="text-textSecondary">{comment.date}</span>
            </div>
            <p className="text-sm text-textSecondary mt-1">{comment.text}</p>

            <div className="flex items-center gap-4 mt-2 text-xs text-textSecondary">
              <span>üëç {comment.likes}</span>
              <span>üí¨ {comment.replies} replies</span>
            </div>
          </div>
        </div>
      ))}
    </div>
  );
}

import React from "react";
import { Switch } from "@headlessui/react";

export default function RecommendedList({ videos, onSelect }) {
  const [autoplay, setAutoplay] = React.useState(true);

  return (
    <aside className="w-[350px] space-y-4 text-white">
      {/* Header */}
      <div className="flex items-center justify-between">
        <h2 className="text-lg font-semibold">Up next</h2>
        <div className="flex items-center gap-2 text-sm text-gray-400">
          <span>Autoplay</span>
          <Switch
            checked={autoplay}
            onChange={setAutoplay}
            className={`${
              autoplay ? "bg-accent" : "bg-gray-600"
            } relative inline-flex h-5 w-10 items-center rounded-full transition`}
          >
            <span
              className={`${
                autoplay ? "translate-x-5" : "translate-x-1"
              } inline-block h-3 w-3 transform rounded-full bg-white transition`}
            />
          </Switch>
        </div>
      </div>

      {/* Video list */}
      <div className="space-y-4">
        {videos.map((video) => (
          <div
            key={video.id}
            className="flex gap-3 cursor-pointer hover:bg-gray-800 p-2 rounded-lg transition"
            onClick={() => onSelect(video)} // üëà click = play
          >
            <img
              src={video.thumbnail}
              alt={video.title}
              className="w-44 h-24 rounded-lg object-cover"
            />
            <div className="flex-1 text-sm">
              <h3 className="font-medium line-clamp-2">{video.title}</h3>
              <p className="text-gray-400 mt-1">{video.channel}</p>
              <p className="text-gray-500 text-xs">{video.views}</p>
            </div>
          </div>
        ))}
      </div>
    </aside>
  );
}
